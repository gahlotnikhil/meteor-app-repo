angular.module('test-app').controller('PredictCtrl', ['$scope', function ($scope) {

	// {
	//		margin: {top: 20, right: 20, bottom: 30, left: 50},
	//		width: 960 - margin.left - margin.right,
	//		height: 500 - margin.top - margin.bottom,
	//		
    // }

	var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

	var parseDate = d3.time.format("%d-%b-%y").parse;

	var x = d3.time.scale()
	    .range([0, width]);

	var y = d3.scale.linear()
	    .range([height, 0]);

	var xAxis = d3.svg.axis()
	    .scale(x)
	    .orient("bottom");

	var yAxis = d3.svg.axis()
	    .scale(y)
	    .orient("left");

	var area = d3.svg.area()
	    .x(function(d) { return x(d.date); })
	    .y0(height)
	    .y1(function(d) { return y(d.close); });

	    var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.close); });

	
    var data = [
    	{
    		date: '1-May-12',
    		close: '58.13'
    	},
    	{
    		date: '30-Apr-12',
    		close: '583.98'
    	},
    	{
    		date: '27-Apr-12',
    		close: '603.00'
    	},
    	{
    		date: '26-Apr-12',
    		close: '60.70'
    	} 
    ];

    var svg = d3.select("#areaChart").append("svg")
	    .attr("width", width + margin.left + margin.right)
	    .attr("height", height + margin.top + margin.bottom)
	  	.append("g")
    	.attr("transform", "translate(" + margin.left + "," + margin.top + ")");


    var updateChart = function(data) {

    	data.forEach(function(d) {
		    d.date = parseDate(d.date);
		    d.close = +d.close;
		  });

	  x.domain(d3.extent(data, function(d) { return d.date; }));
	  //y.domain(d3.extent(data, function(d) { return d.close; }));
	  y.domain([0, d3.max(data, function(d) { return d.close; })]);

	  svg.append("path")
	      .datum(data)
	      .attr("class", "area")
	      .attr("d", area);

	  svg.append("g")
	      .attr("class", "x axis")
	      .attr("transform", "translate(0," + height + ")")
	      .call(xAxis);

	  svg.append("g")
	      .attr("class", "y axis")
	      .call(yAxis)
	    .append("text")
	      .attr("transform", "rotate(-90)")
	      .attr("y", 6)
	      .attr("dy", ".71em")
	      .style("text-anchor", "end")
	      .text("Price ($)");
	   
	   // svg.append("path")
    //   .data([data])
    //   .attr("class", "area").attr("d", area);
      // .attr("x", function(d) { return x(d.date); })
      // .attr("width", width)
      // .attr("y", function(d) { return y(d.close); })
      // .attr("height", function(d) { return height - y(d.close); });
    }


      
    updateChart(data);

	   $scope.$watch('predictParam', function(value, oldValue) {
	   		if (oldValue != undefined && oldValue != value) {
	   			data[3].close = data[3].close + (value - oldValue)
	   			data[1].close = data[1].close + (value - oldValue)

	   			//updateChart(data);

	   			svg.select("path")
				   .data([data]) // set the new data
				   //.attr("d", area);
	   		}
	   })

}]);